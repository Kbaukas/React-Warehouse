{"version":3,"sources":["components/EditForm.js","components/ProducInTable.js","components/MainWindow.js","components/NavBar.js","components/Preview.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["EditForm","props","product","productName","type","weight","color","price","quantity","id","showChanges","state","hadleChange","bind","handleSubmit","evt","this","setState","target","name","value","preventDefault","setas","size","Set","add","console","log","cuState","updateTable","close","prevProps","prevState","ean","className","onSubmit","onChange","placeholder","onClick","Component","ProducInTable","editing","active","handleRemove","showEditForm","closeForm","changeHandler","remove","activate","colSpan","update","index","$oid","checked","MainWindow","products","localStorage","length","JSON","parse","getItem","readJason","removeRecord","toggleActive","newProduct","PRODUCT_DATA","map","push","weigth","toFixed","uuidv4","Index","Math","random","floor","dateOfChanges","Date","setItem","stringify","productsLocal","filter","editData","updatedProducts","tableHead","th","key","defaultProps","NavBar","Navbar","bg","variant","expand","sticky","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","title","Item","Divider","React","Preview","style","width","Home","minWidth","to","pathname","hash","search","exact","path","render","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"6nPA0JeA,G,8DAtJb,WAAYC,GAAQ,IAAD,6BACjB,cAAMA,IAYGA,MAAMC,QATbC,EAJe,EAIfA,YACAC,EALe,EAKfA,KACAC,EANe,EAMfA,OACAC,EAPe,EAOfA,MACAC,EARe,EAQfA,MACAC,EATe,EASfA,SATe,EAUfC,GAVe,EAYfC,YAZe,OAejB,EAAKC,MAAQ,CACXR,YAAaA,EACbC,KAAMA,EACNC,OAAQA,EACRC,MAAOA,EACPC,MAAOA,EACPC,SAAUA,GAKZ,EAAKI,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBA3BH,E,wDA8BPE,GACVC,KAAKC,SAAL,eACGF,EAAIG,OAAOC,KAAOJ,EAAIG,OAAOE,U,mCAGrBL,GAAM,IAAD,OAChBA,EAAIM,iBACOL,KAAKL,MAAMR,YAAtB,IACImB,EACFN,KAAKf,MAAMC,QAAQQ,YAAYa,KAAO,EAClC,IAAIC,IAAJ,YAAYR,KAAKf,MAAMC,QAAQQ,cAC/B,IAAIc,IAAI,CAACR,KAAKL,MAAMR,cAC1BmB,EAAMG,IAAIT,KAAKL,MAAMR,aACrBuB,QAAQC,IAAIL,GAEZN,KAAKC,UAAS,SAACW,GAAD,MAAc,CAC1BlB,YAAaY,EAAMG,IAAI,EAAKxB,MAAMC,QAAQC,iBAG5Ca,KAAKf,MAAM4B,YAAYb,KAAKf,MAAMC,QAAQO,GAAIO,KAAKL,MAAOW,GAC1DN,KAAKf,MAAM6B,U,yCAEMC,EAAWC,GAC5BN,QAAQC,IAAI,iB,+BAEJ,IAAD,OAOP,OANAD,QAAQC,IAAI,MAAQX,KAAKL,MAAMsB,KAO7B,yBAAKC,UAAU,YACb,0BAAMC,SAAUnB,KAAKF,cACnB,6BACE,2CACA,2BACEoB,UAAU,UACVf,KAAK,cACLiB,SAAUpB,KAAKJ,YACfyB,YAAY,eACZjB,MAAOJ,KAAKL,MAAMR,eAYtB,6BACE,mCAEA,2BACE+B,UAAU,UACV9B,KAAK,OACLe,KAAK,OACLiB,SAAUpB,KAAKJ,YACfyB,YAAY,OACZjB,MAAOJ,KAAKL,MAAMP,QAGtB,6BACE,qCACA,2BACE8B,UAAU,UACV9B,KAAK,SACLe,KAAK,SACLiB,SAAUpB,KAAKJ,YACfyB,YAAY,YACZjB,MAAOJ,KAAKL,MAAMN,UAGtB,6BACE,oCACA,2BACE6B,UAAU,UACV9B,KAAK,OACLe,KAAK,QACLiB,SAAUpB,KAAKJ,YACfyB,YAAY,QACZjB,MAAOJ,KAAKL,MAAML,SAGtB,6BACE,oCACA,2BACE4B,UAAU,UACV9B,KAAK,SACLe,KAAK,QACLiB,SAAUpB,KAAKJ,YACfyB,YAAY,cACZjB,MAAOJ,KAAKL,MAAMJ,SAGtB,6BACE,uCACA,2BACE2B,UAAU,UACV9B,KAAK,OACLe,KAAK,WACLiB,SAAUpB,KAAKJ,YACfyB,YAAY,WACZjB,MAAOJ,KAAKL,MAAMH,YAGtB,6BACE,4BAAQJ,KAAK,UAAb,QACA,uBAAGkC,QAAS,kBAAM,EAAKrC,MAAM6B,UAA7B,Y,GA/IWS,cCkHRC,E,kDA/Gb,WAAYvC,GAAQ,IAAD,8BACjB,cAAMA,IAEDU,MAAQ,CACX8B,SAAS,EACTC,QAAQ,GAEV,EAAKC,aAAe,EAAKA,aAAa9B,KAAlB,gBACpB,EAAK+B,aAAe,EAAKA,aAAa/B,KAAlB,gBACpB,EAAKgC,UAAY,EAAKA,UAAUhC,KAAf,gBACjB,EAAKiC,cAAgB,EAAKA,cAAcjC,KAAnB,gBAVJ,E,yDAcNE,GACXC,KAAKf,MAAM8C,OAAO/B,KAAKf,MAAMQ,M,mCAElBM,GACXC,KAAKC,SAAS,CACZwB,SAAUzB,KAAKL,MAAM8B,Y,kCAIvBzB,KAAKC,SAAS,CACZwB,SAAUzB,KAAKL,MAAM8B,Y,6CAIvBf,QAAQC,IAAI,a,oCAGAZ,GACZC,KAAKf,MAAM+C,SAAShC,KAAKf,MAAMC,QAAQO,IAEvCO,KAAKC,SAAL,eAAiBF,EAAIG,OAAOC,KAAOJ,EAAIG,OAAO8B,a,+BAMvC,MAaHhC,KAAKf,MAAMC,QATbC,EAJK,EAILA,YACA8B,EALK,EAKLA,IACA7B,EANK,EAMLA,KACAC,EAPK,EAOLA,OACAC,EARK,EAQLA,MACAoC,EATK,EASLA,OACAnC,EAVK,EAULA,MACAC,EAXK,EAWLA,SAXK,EAYLC,GAGF,OADAiB,QAAQC,IAAIxB,GACLa,KAAKL,MAAM8B,QAChB,wBAAIP,UAAU,iBACZ,wBAAIA,UAAU,WAAWe,QAAQ,MAC/B,kBAAC,EAAD,CACEnB,MAAOd,KAAK6B,UACZhB,YAAab,KAAKf,MAAMiD,OACxBhD,QAASc,KAAKf,MAAMC,YAO1B,wBAEEgC,UAAU,iBAEV,4BAAKlB,KAAKf,MAAMkD,OAChB,4BAAKhD,GACL,4BAAK8B,EAAImB,MACT,4BAAKhD,GACL,4BAAKC,GACL,4BAAKC,GACL,4BAAKC,GACL,4BAAKC,GAEL,4BACE,2BAAO0B,UAAU,aACf,2BACEA,UAAU,WACV9B,KAAK,WACLe,KAAK,SACLkC,QAASX,EACTN,SAAUpB,KAAK8B,gBAEjB,0BAAMZ,UAAU,gBAGpB,4BACE,4BAAQA,UAAU,QAAlB,SAEF,4BACE,4BAAQI,QAAStB,KAAK4B,aAAcV,UAAU,QAA9C,SAIF,4BACE,4BAAQA,UAAU,SAASI,QAAStB,KAAK2B,cAAzC,gB,GAvGkBJ,a,wBCKtBe,E,kDAgBJ,WAAYrD,GAAQ,IAAD,8BACjB,cAAMA,IAGDU,MAAQ,CACX4C,SAAS,YACHC,aAAaC,OAAS,EACtBC,KAAKC,MAAMH,aAAaI,QAAQ,aAChC,EAAKC,cAGb,EAAKC,aAAe,EAAKA,aAAajD,KAAlB,gBACpB,EAAKgD,UAAY,EAAKA,UAAUhD,KAAf,gBACjB,EAAKgB,YAAc,EAAKA,YAAYhB,KAAjB,gBACnB,EAAKkD,aAAe,EAAKA,aAAalD,KAAlB,gBAdH,E,gEAwBkB,IAA/BG,KAAKL,MAAM4C,SAASE,QACtBzC,KAAK6C,c,kCAKP,IAAIG,EAAa,GACjBC,EAAaV,SAASW,KAAI,SAAChE,EAASiD,GAClCa,EAAWG,KAAX,eACKjE,EADL,CAEEkE,OAAQlE,EAAQG,OAAOgE,QAAQ,GAC/B3B,QAAQ,EACRjC,GAAI6D,cACJC,MAAOpB,EAAQ,EACf5C,OAAwB,IAAhBiE,KAAKC,UAAgBJ,QAAQ,GACrC7D,SAAUgE,KAAKE,MAAsB,GAAhBF,KAAKC,UAE1B/D,YAAa,IAAIc,IAAItB,EAAQC,aAC7BwE,cAAe,CAAC,IAAIC,YAGxBpB,aAAaqB,QAAQ,WAAYnB,KAAKoB,UAAUd,IAChD,IAAIe,EAAgBrB,KAAKC,MAAMH,aAAaI,QAAQ,aAMpD,OALA5C,KAAKC,SAAS,CACZsC,SAAUwB,IAEZrD,QAAQC,IAAI,cACZD,QAAQC,IAAIqC,GACLA,I,mCAIIvD,GAAK,IAAD,OACfiB,QAAQC,IAAI,UACZX,KAAKC,UACH,SAACW,GAAD,MAAc,CACZ2B,SAAU3B,EAAQ2B,SAASyB,QACzB,SAAC9E,GAAD,OAAgC,IAAnBA,EAAQwC,cAGzB,kBACEc,aAAaqB,QAAQ,WAAYnB,KAAKoB,UAAU,EAAKnE,MAAM4C,gB,mCAIpD9C,GAAK,IAAD,OACfO,KAAKC,UACH,SAACW,GAAD,MAAc,CACZ2B,SAAU3B,EAAQ2B,SAASW,KAAI,SAAChE,GAAD,OAC7BA,EAAQO,KAAOA,EAAf,eAAyBP,EAAzB,CAAkCwC,QAASxC,EAAQwC,SAAWxC,SAGlE,kBACEsD,aAAaqB,QAAQ,WAAYnB,KAAKoB,UAAU,EAAKnE,MAAM4C,gB,kCAIrD9C,EAAIwE,EAAU3D,GAAO,IAOvBnB,EAAsD8E,EAAtD9E,YAAaC,EAAyC6E,EAAzC7E,KAAMC,EAAmC4E,EAAnC5E,OAAQC,EAA2B2E,EAA3B3E,MAAOC,EAAoB0E,EAApB1E,MAAOC,EAAayE,EAAbzE,SAK3C0E,GAHc,IAAI1D,IAGAR,KAAKL,MAAM4C,SAASW,KAAI,SAAChE,GAG/C,OAAIA,EAAQO,KAAOA,EACV,eACFP,EADL,CAEEC,YAAaA,EACbC,KAAMA,EACNC,OAAQA,EACRC,MAAOA,EACPC,MAAOA,EACPC,SAAUA,EACVE,YAAa,IAAIc,IAAJ,sBAAYF,GAAZ,CAAmBnB,KAChCwE,cACErD,EAAMC,KAAOrB,EAAQQ,YAAYa,KAAjC,sBACQrB,EAAQyE,eADhB,CAC+B,IAAIC,OAC/B1E,EAAQyE,gBAGXzE,MAETc,KAAKC,UAAS,SAACW,GAAD,MAAc,CAC1B2B,SAAS,YAAK2B,OAKhB1B,aAAaqB,QAAQ,WAAYnB,KAAKoB,UAAL,YAAmBI,KACrCxB,KAAKC,MAAMH,aAAaI,QAAQ,e,oFAWjCzC,GACdH,KAAKC,SAAS,M,+BAEN,IAAD,OACP,OACE,yBAAKiB,UAAU,cAEb,yDAEA,2BAAOA,UAAU,oBAEf,+BACE,wBAAIA,UAAU,IACXlB,KAAKf,MAAMkF,UAAUjB,KAAI,SAACkB,GAAD,OACxB,wBAAIlD,UAAU,iBAAiBmD,IAAKf,eACjCc,MAGL,wBAAIlD,UAAU,mBACd,wBAAIA,UAAU,mBACd,wBAAIA,UAAU,qBAIlB,+BAC2B,OAAxBlB,KAAKL,MAAM4C,UACVvC,KAAKL,MAAM4C,SAASW,KAAI,SAAChE,EAASiD,GAAV,OACtB,kBAAC,EAAD,CACEH,SAAU,EAAKe,aACfZ,MAAOA,EAAQ,EACfD,OAAQ,EAAKrB,YACbwD,IAAKnF,EAAQO,GACbA,GAAIP,EAAQO,GACZP,QAASA,EACT6C,OAAQ,EAAKe,oBAKvB,yBAAK5B,UAAU,qB,GA3LEK,aAAnBe,EAEGgC,aAAe,CACpBH,UAAW,CACT,QACA,eACA,MACA,OACA,YACA,QACA,QACA,WACA,WAsLS7B,Q,wCCxKAiC,E,uKA9BX,OACE,yBAAKrD,UAAU,OACb,yBAAKA,UAAU,aACb,kBAAC,IAAD,KACE,kBAACsD,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,OAAOC,OAAO,KAAKC,OAAO,OAClD,kBAACJ,EAAA,EAAOK,MAAR,CAAcC,KAAK,aAAnB,aACA,kBAACN,EAAA,EAAOO,OAAR,CAAeC,gBAAc,qBAC7B,kBAACR,EAAA,EAAOS,SAAR,CAAiBxF,GAAG,oBAClB,kBAACyF,EAAA,EAAD,CAAKhE,UAAU,WACb,kBAACgE,EAAA,EAAIC,KAAL,CAAUL,KAAK,qBAAf,WACA,kBAACI,EAAA,EAAIC,KAAL,CAAUL,KAAK,aAAf,YAEA,kBAACM,EAAA,EAAD,CAAaC,MAAM,QAAQ5F,GAAG,sBAC5B,kBAAC2F,EAAA,EAAYE,KAAb,CAAkBR,KAAK,aAAvB,SACA,kBAACM,EAAA,EAAYE,KAAb,CAAkBR,KAAK,qBAAvB,QAIA,kBAACM,EAAA,EAAYG,QAAb,iB,GApBCC,IAAMjE,WCKZkE,E,uKAJX,OAAO,yBAAKC,MAAO,CAAEC,MAAO,SAArB,e,GAHWpE,aCgCPqE,EA1Bf,uKAEI,OACE,yBAAKF,MAAO,CAAEG,SAAU,SACtB,kBAAC,EAAD,MACA,kBAAC,IAAD,CACEC,GAAI,CACFC,SAAU,YACVC,KAAM,UACNC,OAAQ,wBAIZ,kBAAC,IAAD,KAGE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,QAAQC,OAAQ,kBAAM,kBAACR,EAAD,SACxC,kBAAC,IAAD,CAAOM,OAAK,EAACC,KAAK,oBAAoBC,OAAQ,kBAAM,kBAAC,EAAD,SACpD,kBAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAAM,kBAAC,EAAD,SACpC,kBAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,YAAYC,OAAQ,kBAAM,kBAAC,EAAD,eAnBtD,GAA0B7E,aCQX8E,MAVf,WACE,OACE,kBAAC,IAAD,KACE,yBAAKnF,UAAU,OACb,kBAAC,EAAD,SCEYoF,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCZNC,IAASP,OACP,kBAAC,IAAMQ,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL5G,QAAQ4G,MAAMA,EAAMC,c","file":"static/js/main.4233514d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./css/EditForm.css\";\r\nimport { Link } from \"react-router-dom\";\r\nclass EditForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    //**************** */ unwraping props\r\n    const {\r\n      productName,\r\n      type,\r\n      weight,\r\n      color,\r\n      price,\r\n      quantity,\r\n      id,\r\n\r\n      showChanges,\r\n    } = this.props.product;\r\n    // ************************defining default input values\r\n    this.state = {\r\n      productName: productName,\r\n      type: type,\r\n      weight: weight,\r\n      color: color,\r\n      price: price,\r\n      quantity: quantity,\r\n\r\n      // ********************showChanges: new Set([showChanges]),\r\n    };\r\n\r\n    this.hadleChange = this.hadleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  hadleChange(evt) {\r\n    this.setState({\r\n      [evt.target.name]: evt.target.value,\r\n    });\r\n  }\r\n  handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    let name = this.state.productName;\r\n    let setas =\r\n      this.props.product.showChanges.size > 0\r\n        ? new Set([...this.props.product.showChanges])\r\n        : new Set([this.state.productName]);\r\n    setas.add(this.state.productName);\r\n    console.log(setas);\r\n\r\n    this.setState((cuState) => ({\r\n      showChanges: setas.add(this.props.product.productName),\r\n    }));\r\n\r\n    this.props.updateTable(this.props.product.id, this.state, setas);\r\n    this.props.close();\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    console.log(\"Form Update\");\r\n  }\r\n  render() {\r\n    console.log(\"id \" + this.state.ean);\r\n    // productName: productName,\r\n    //   ean: ean,\r\n    //     type: type,\r\n    //       weight: weight,\r\n    //         color: color\r\n    return (\r\n      <div className=\"EditForm\">\r\n        <form onSubmit={this.handleSubmit}>\r\n          <div>\r\n            <p>Product Name</p>\r\n            <input\r\n              className=\"input_1\"\r\n              name=\"productName\"\r\n              onChange={this.hadleChange}\r\n              placeholder=\"Product name\"\r\n              value={this.state.productName}\r\n            />\r\n          </div>\r\n\r\n          {/* <input\r\n            className=\"input_2\"\r\n            type=\"text\"\r\n            name=\"ean\"\r\n            onChange={this.hadleChange}\r\n            placeholder=\"EAN\"\r\n            value={this.state.ean.$oid}\r\n          /> */}\r\n          <div>\r\n            <p>Type</p>\r\n\r\n            <input\r\n              className=\"input_3\"\r\n              type=\"text\"\r\n              name=\"type\"\r\n              onChange={this.hadleChange}\r\n              placeholder=\"Type\"\r\n              value={this.state.type}\r\n            />\r\n          </div>\r\n          <div>\r\n            <p>Weight</p>\r\n            <input\r\n              className=\"input_4\"\r\n              type=\"number\"\r\n              name=\"weight\"\r\n              onChange={this.hadleChange}\r\n              placeholder=\"Weight(g)\"\r\n              value={this.state.weight}\r\n            />\r\n          </div>\r\n          <div>\r\n            <p>Color</p>\r\n            <input\r\n              className=\"input_5\"\r\n              type=\"text\"\r\n              name=\"color\"\r\n              onChange={this.hadleChange}\r\n              placeholder=\"Color\"\r\n              value={this.state.color}\r\n            />\r\n          </div>\r\n          <div>\r\n            <p>Price</p>\r\n            <input\r\n              className=\"input_6\"\r\n              type=\"number\"\r\n              name=\"price\"\r\n              onChange={this.hadleChange}\r\n              placeholder=\"Price (EUR)\"\r\n              value={this.state.price}\r\n            />\r\n          </div>\r\n          <div>\r\n            <p>Quantity</p>\r\n            <input\r\n              className=\"input_7\"\r\n              type=\"text\"\r\n              name=\"quantity\"\r\n              onChange={this.hadleChange}\r\n              placeholder=\"Quantity\"\r\n              value={this.state.quantity}\r\n            />\r\n          </div>\r\n          <div>\r\n            <button type=\"submit\">Save</button>\r\n            <a onClick={() => this.props.close()}>X</a>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditForm;\r\n","import React, { Component } from \"react\";\r\nimport \"./css/ProducInTable.css\";\r\nimport EditForm from \"./EditForm\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass ProducInTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      editing: false,\r\n      active: false,\r\n    };\r\n    this.handleRemove = this.handleRemove.bind(this);\r\n    this.showEditForm = this.showEditForm.bind(this);\r\n    this.closeForm = this.closeForm.bind(this);\r\n    this.changeHandler = this.changeHandler.bind(this);\r\n  }\r\n  // click handler to remove element\r\n\r\n  handleRemove(evt) {\r\n    this.props.remove(this.props.id);\r\n  }\r\n  showEditForm(evt) {\r\n    this.setState({\r\n      editing: !this.state.editing,\r\n    });\r\n  }\r\n  closeForm() {\r\n    this.setState({\r\n      editing: !this.state.editing,\r\n    });\r\n  }\r\n  componentWillUnmount() {\r\n    console.log(\"Unmount\");\r\n  }\r\n\r\n  changeHandler(evt) {\r\n    this.props.activate(this.props.product.id);\r\n    // this.setState((cuState) => ({\r\n    this.setState({ [evt.target.name]: evt.target.activate });\r\n  }\r\n\r\n  //   [evt.target.name]: !evt.target.checked,\r\n  // }));\r\n\r\n  render() {\r\n    // getting props from parent element(MainWindow) and unwrapping\r\n\r\n    const {\r\n      productName,\r\n      ean,\r\n      type,\r\n      weight,\r\n      color,\r\n      active,\r\n      price,\r\n      quantity,\r\n      id,\r\n    } = this.props.product;\r\n    console.log(productName);\r\n    return this.state.editing ? (\r\n      <tr className=\"ProducInTable\">\r\n        <td className=\"editable\" colSpan=\"12\">\r\n          <EditForm\r\n            close={this.closeForm}\r\n            updateTable={this.props.update}\r\n            product={this.props.product}\r\n          ></EditForm>\r\n        </td>\r\n      </tr>\r\n    ) : (\r\n      // passing props to html <td> elements\r\n      // And triggering tr to check uncheck Checkbox\r\n      <tr\r\n        // onClick={() => this.props.activate(this.props.product.id)}\r\n        className=\"ProducInTable\"\r\n      >\r\n        <td>{this.props.index}</td>\r\n        <td>{productName}</td>\r\n        <td>{ean.$oid}</td>\r\n        <td>{type}</td>\r\n        <td>{weight}</td>\r\n        <td>{color}</td>\r\n        <td>{price}</td>\r\n        <td>{quantity}</td>\r\n\r\n        <td>\r\n          <label className=\"container\">\r\n            <input\r\n              className=\"Activate\"\r\n              type=\"checkbox\"\r\n              name=\"active\"\r\n              checked={active}\r\n              onChange={this.changeHandler}\r\n            />\r\n            <span className=\"checkmark\"></span>\r\n          </label>\r\n        </td>\r\n        <td>\r\n          <button className=\"view\">View</button>\r\n        </td>\r\n        <td>\r\n          <button onClick={this.showEditForm} className=\"edit\">\r\n            Edit\r\n          </button>\r\n        </td>\r\n        <td>\r\n          <button className=\"delete\" onClick={this.handleRemove}>\r\n            Delete\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProducInTable;\r\n","import React, { Component } from \"react\";\r\nimport ProducInTable from \"./ProducInTable\";\r\nimport \"./css/MainWindow.css\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\n// import { MDBDataTable } from \"mdbreact\";\r\n\r\nimport PRODUCT_DATA from \"./data/jsonData.json\";\r\nimport EditForm from \"./EditForm\";\r\nclass MainWindow extends Component {\r\n  // *******default props for table Head********\r\n  static defaultProps = {\r\n    tableHead: [\r\n      \"Index\",\r\n      \"Product Name\",\r\n      \"EAN\",\r\n      \"Type\",\r\n      \"Weight(g)\",\r\n      \"Color\",\r\n      \"Price\",\r\n      \"Quantity\",\r\n      \"Active\",\r\n    ],\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    //*****Initial state from Json******** */\r\n\r\n    this.state = {\r\n      products: [\r\n        ...(localStorage.length > 0\r\n          ? JSON.parse(localStorage.getItem(\"products\"))\r\n          : this.readJason()),\r\n      ],\r\n    };\r\n    this.removeRecord = this.removeRecord.bind(this);\r\n    this.readJason = this.readJason.bind(this);\r\n    this.updateTable = this.updateTable.bind(this);\r\n    this.toggleActive = this.toggleActive.bind(this);\r\n    // this.handleLoadData = this.handleLoadData.bind(this);\r\n  }\r\n\r\n  // handleLoadData(evt) {\r\n  //   this.setState({\r\n  //     products: JSON.parse(localStorage.getItem(\"products\")),\r\n  //   });\r\n  // }\r\n  componentDidMount() {\r\n    if (this.state.products.length === 0) {\r\n      this.readJason();\r\n    }\r\n  }\r\n  //****function to add unique id to each product  and use this function to initiate state*/\r\n  readJason() {\r\n    let newProduct = [];\r\n    PRODUCT_DATA.products.map((product, index) => {\r\n      newProduct.push({\r\n        ...product,\r\n        weigth: product.weight.toFixed(2),\r\n        active: false,\r\n        id: uuidv4(),\r\n        Index: index + 1,\r\n        price: (Math.random() * 100).toFixed(2),\r\n        quantity: Math.floor(Math.random() * 50),\r\n\r\n        showChanges: new Set(product.productName),\r\n        dateOfChanges: [new Date()],\r\n      });\r\n    });\r\n    localStorage.setItem(\"products\", JSON.stringify(newProduct));\r\n    let productsLocal = JSON.parse(localStorage.getItem(\"products\"));\r\n    this.setState({\r\n      products: productsLocal,\r\n    });\r\n    console.log(\"newProduct\");\r\n    console.log(newProduct);\r\n    return newProduct;\r\n  }\r\n\r\n  //********remove product**** if active is true */\r\n  removeRecord(id) {\r\n    console.log(\"remove\");\r\n    this.setState(\r\n      (cuState) => ({\r\n        products: cuState.products.filter(\r\n          (product) => product.active === false\r\n        ),\r\n      }),\r\n      () =>\r\n        localStorage.setItem(\"products\", JSON.stringify(this.state.products))\r\n    );\r\n  }\r\n  // *********Select deselect Active*******\r\n  toggleActive(id) {\r\n    this.setState(\r\n      (cuState) => ({\r\n        products: cuState.products.map((product) =>\r\n          product.id === id ? { ...product, active: !product.active } : product\r\n        ),\r\n      }),\r\n      () =>\r\n        localStorage.setItem(\"products\", JSON.stringify(this.state.products))\r\n    );\r\n  }\r\n  //***** */ updating table  ******\r\n  updateTable(id, editData, setas) {\r\n    // \"Index\",\r\n    // \"Product Name\",\r\n    //   \"EAN\",\r\n    //   \"Type\",\r\n    //   \"Weight\",\r\n    //   \"Color\",\r\n    const { productName, type, weight, color, price, quantity } = editData;\r\n\r\n    let tarpinisSetas = new Set();\r\n    // var tarpinisMasyvas = [...showChanges];\r\n\r\n    const updatedProducts = this.state.products.map((product) => {\r\n      // console.log(product.historyName);\r\n      // tarpinisSetas.add(productName);\r\n      if (product.id === id) {\r\n        return {\r\n          ...product,\r\n          productName: productName,\r\n          type: type,\r\n          weight: weight,\r\n          color: color,\r\n          price: price,\r\n          quantity: quantity,\r\n          showChanges: new Set([...setas, productName]),\r\n          dateOfChanges:\r\n            setas.size > product.showChanges.size\r\n              ? [...product.dateOfChanges, new Date()]\r\n              : product.dateOfChanges,\r\n        };\r\n      }\r\n      return product;\r\n    });\r\n    this.setState((cuState) => ({\r\n      products: [...updatedProducts],\r\n    }));\r\n    // *************************\r\n    // const state = [...this.state.products.historyName, productName];\r\n    // this.state.products.historyName.add(productName);\r\n    localStorage.setItem(\"products\", JSON.stringify([...updatedProducts]));\r\n    let products = JSON.parse(localStorage.getItem(\"products\"));\r\n\r\n    // ***************************\r\n  }\r\n  componentDidUpdate() {\r\n    // this.state.products.map(product=>({\r\n    //   setState({\r\n    //     product:{...product,showChanges.add(\"asadasd\")}\r\n    //   })\r\n    // }))\r\n  }\r\n  addToChangeName(name) {\r\n    this.setState({});\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"MainWindow\">\r\n        {/* <button onClick={this.handleLoadData}>Load Data</button> */}\r\n        <h1>Warehouse Product's Table</h1>\r\n        {/********  genarating table*********** */}\r\n        <table className=\"table-responsive\">\r\n          {/* Table head */}\r\n          <thead>\r\n            <tr className=\"\">\r\n              {this.props.tableHead.map((th) => (\r\n                <th className=\"sticky-header \" key={uuidv4()}>\r\n                  {th}\r\n                </th>\r\n              ))}\r\n              <th className=\"sticky-header \"></th>\r\n              <th className=\"sticky-header \"></th>\r\n              <th className=\"sticky-header \"></th>\r\n            </tr>\r\n          </thead>\r\n          {/* generating table body  */}\r\n          <tbody>\r\n            {this.state.products !== null &&\r\n              this.state.products.map((product, index) => (\r\n                <ProducInTable\r\n                  activate={this.toggleActive}\r\n                  index={index + 1}\r\n                  update={this.updateTable}\r\n                  key={product.id}\r\n                  id={product.id}\r\n                  product={product}\r\n                  remove={this.removeRecord}\r\n                />\r\n              ))}\r\n          </tbody>\r\n        </table>\r\n        <div className=\"tableFooter\"></div>\r\n        {/* <EditForm /> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainWindow;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { Navbar, Nav, NavDropdown } from \"react-bootstrap\";\r\n\r\nclass NavBar extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Router>\r\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" sticky=\"top\">\r\n              <Navbar.Brand href=\"/products\">Warehouse</Navbar.Brand>\r\n              <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n              <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"mr-auto\">\r\n                  <Nav.Link href=\"/products/preview\">Preview</Nav.Link>\r\n                  <Nav.Link href=\"/products\">Products</Nav.Link>\r\n\r\n                  <NavDropdown title=\"Meniu\" id=\"basic-nav-dropdown\">\r\n                    <NavDropdown.Item href=\"/products\">Table</NavDropdown.Item>\r\n                    <NavDropdown.Item href=\"/products/preview\">\r\n                      Edit\r\n                    </NavDropdown.Item>\r\n\r\n                    <NavDropdown.Divider />\r\n                  </NavDropdown>\r\n                </Nav>\r\n              </Navbar.Collapse>\r\n            </Navbar>\r\n          </Router>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Preview extends Component {\r\n  render() {\r\n    //   TODO\r\n    return <div style={{ width: \"85vw\" }}>Preview</div>;\r\n  }\r\n}\r\n\r\nexport default Preview;\r\n","import React, { Component } from \"react\";\r\nimport { Route, Switch, Link } from \"react-router-dom\";\r\nimport MainWindow from \"./MainWindow\";\r\nimport EditForm from \"./EditForm\";\r\n\r\nimport NavBar from \"./NavBar\";\r\nimport Preview from \"./Preview\";\r\n\r\nexport class Home extends Component {\r\n  render() {\r\n    return (\r\n      <div style={{ minWidth: \"85vw\" }}>\r\n        <NavBar />\r\n        <Link\r\n          to={{\r\n            pathname: \"/products\",\r\n            hash: \"#submit\",\r\n            search: \"?quick-submit=true\",\r\n          }}\r\n        ></Link>\r\n        {/* <MainWindow /> */}\r\n        <Switch>\r\n          {/* <h1>Home</h1> */}\r\n\r\n          <Route exact path=\"/home\" render={() => <Home />} />\r\n          <Route exact path=\"/products/preview\" render={() => <Preview />} />\r\n          <Route exact path=\"/\" render={() => <MainWindow />} />\r\n          <Route exact path=\"/products\" render={() => <MainWindow />} />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport MainWindow from \"./components/MainWindow\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport Home from \"./components/Home\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Home />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}